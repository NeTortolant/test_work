version: '3.9'

services:
  app:
    container_name: test_app
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "${UVICORN_PORT}:${UVICORN_PORT}"
    depends_on:
      - db
      - pgbouncer
    user: 1000:1000
    working_dir: /app
    volumes:
      - ./test_app:/app/test_app:ro
      - pgbouncer_socket:/var/run/pgbouncer:rw
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@/${POSTGRES_DB}?host=/var/run/pgbouncer&port=6432
      - UVICORN_NUMBER_WORKERS=${UVICORN_NUMBER_WORKERS}
      - UVICORN_LOG_LEVEL=${UVICORN_LOG_LEVEL}
      - UVICORN_PORT=${UVICORN_PORT}
    command: uvicorn test_app.main:app --host 0.0.0.0 --port ${UVICORN_PORT} --workers ${UVICORN_NUMBER_WORKERS} --log-level ${UVICORN_LOG_LEVEL}
    networks:
      - main_network
      
      
  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./db/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
      - postgresql_socket:/var/run/postgresql:rw
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h db -p 5432 -U ${POSTGRES_USER}"]
      interval: 5s
      retries: 10
      timeout: 5s
    networks:
      - db_network

  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    network_mode: none
    restart: always
    depends_on:
      - db
    volumes:
      - ./db/pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./db/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
      - pgbouncer_socket:/var/run/pgbouncer:rw
      - postgresql_socket:/var/run/postgresql:rw
    
  liquibase:
    image: liquibase/liquibase:latest
    environment:
      - LIQUIBASE_COMMAND_URL=jdbc:postgresql://db/${POSTGRES_DB}
      - LIQUIBASE_COMMAND_USERNAME=${POSTGRES_USER}
      - LIQUIBASE_COMMAND_PASSWORD=${POSTGRES_PASSWORD}
      - LIQUIBASE_COMMAND_CHANGELOG_FILE=${LIQUIBASE_COMMAND_CHANGELOG_FILE}
    command: update
    volumes:
      - ./db/liquibase/changelog:/liquibase/changelog
    depends_on:
      - db
    networks:
      - db_network

  redis:
    image: redis:latest
    container_name: test_redis
    ports:
      - "6379:6379"
    networks:
      - main_network

volumes:
  postgresql_socket:
  pgbouncer_socket:

networks:
  main_network:
    driver: bridge
  db_network:
    internal: true
    
    
